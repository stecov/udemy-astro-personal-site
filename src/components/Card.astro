---
export type Props = {
    to: string;
    title: string;
    gradientFrom: string;
    gradientTo: string;
};
const { to, title, gradientFrom, gradientTo } = Astro.props;
---

<a href={to} class="card" data-gradientfrom={gradientFrom}>
    <div class="card__inner">
        <div class="card__title">{title}</div>
        <div class="card__footer">&rarr;</div>
    </div>
</a>

<style define:vars={{ gradientFrom, gradientTo }}>
    .card {
        --radius: 10px;
        background-image: linear-gradient(
            to right,
            var(--gradientFrom),
            var(--gradientTo)
        );
        padding: 4px;
        border-radius: var(--radius);
        text-decoration: none;
        transition: all 0.2s ease-in-out;
    }

    .card:hover {
        transform: scale(0.95);
    }

    .card__inner {
        background: var(--background);
        padding: 1.5rem;
        border-radius: var(--radius);
        display: flex;
        flex-direction: column;
    }

    .card__title {
        font-size: 1.2rem;
        color: var(--grey-900);
        font-weight: 500;
        line-height: 1.75rem;
    }

    .card__footer {
        padding-top: 2rem;
        font-size: 1.2rem;
        color: var(--grey-900);
        margin: auto 0 0 auto;
    }
</style>

<script define:vars={{ gradientFrom }}>
    // 33. The Dark Side of define:vars
    // De dacon le code est écrit en ligne pour chaque composant
    console.log("Card:gradientFrom:", gradientFrom);

    // Corrigé si on passe par un élément data (à vérifier ?)
    const card = document.querySelector(".card");
    if (card instanceof HTMLElement) {
        console.log("Card-data-gradientfrom:", card.dataset.gradientfrom);
    }
</script>
